Git
Study Guide

1 Versa what?!

What is version control?
Version control records any changes you make to a file or files, so you can recall them at a later time.

2 Where the heart is

What is the difference between distributed and centralized version control
systems?
Centralized will hold everything in one place, while distributed will allow everyone working on the repository to have a copy.

3 Versa who?!

What does a version control program do for us?
It allows us to view our previous commits to see where we messed up.

4 Committing to git

What is a commit?
A commit is simply recording our changes made in the repository with an explanation of what we did.

5 Checking out git

What is a check out?
A way to switch between branches.

6 Itâ€™s like a tree limb

What is a branch?
A way to work on the side without changing the master. 

7 The life of a limb

How long are branches in git supposed to exist?
They exist until you delete them.

8 Tree growth

How do you create a branch in git?
By simply performing a git branch <branch name> command.

9 Swinging on a vine

How do you switch branches in git?
By using a git checkout <branch name> command.

10 Taping it together

How do you merge branches in git?
By using a git merge <branch to be merged> command, but you have to be in the branch you wish for the other branch to be merged into.

11 Status

How do you check the status of the files you are presently working on?
By using the git status command.

12 Adding to the chaos

How do you add files to the repository?
By using the git add <file name> command.

13 The main line

What is the name for the primary branch in git?
The primary branch in git is known as the master branch.

14 What limb are you on?

How do you check which branch you presently have checked out?
By using the git status command.

15 Git what?!

What is github?
The single largest host for Git repositories.

16 We see a need!

Why was git created?
SVN began charging money for their service, so git was created as a free open source product.

17 A day in the life of git

What is a typical git workflow?
Having code which is entirely stable in the master branch, and test code in other branches.

18 Why git?

What makes git different than other version control systems?
git was developed by linux kernel developers, and is known for its speed/ability to allow everyone work on their own branches at one time.

19 What were they thinking?!

What were the design criteria for git?
It had to be fast, lightweight, and have powerful branching/merging.

20 Time machine

How do we view the past of a project with git?
By using the git log command.

21 Commit Comment

How much information, and what kind of information should be in a commit
message?
It should be brief, but it must convey enough information to know exactly what happened during the said commit.

22 Great Scott!

If there was a mistake made in the past of a project, how should we go about
correcting that mistake?
By using a git checkout <commit name>. It isn't recommended to play in the past though. Try to avoid it if you can

